// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RentalService.Infrastructure.EF.DbAccess;

#nullable disable

namespace RentalService.Infrastructure.Migrations
{
    [DbContext(typeof(RentalServiceContext))]
    [Migration("20220926185845_UserIdsMigration")]
    partial class UserIdsMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RentalService.Infrastructure.DAOs.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("DollarsPerHours")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsRented")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("RentalService.Infrastructure.DAOs.Rental", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTimeFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateTimeToActual")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateTimeToDeclared")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("RenterId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId");

                    b.HasIndex("CarId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("RentalService.Infrastructure.DAOs.Rental", b =>
                {
                    b.HasOne("RentalService.Infrastructure.DAOs.Car", "Car")
                        .WithMany("Rentals")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("RentalService.Infrastructure.DAOs.Car", b =>
                {
                    b.Navigation("Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
